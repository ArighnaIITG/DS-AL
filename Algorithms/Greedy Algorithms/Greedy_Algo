What are Greedy Algorithms?

"Greedy Algorithms" is an algorithmic paradigm that builds up a solution piece by piece, always choosing the next piece that offers the best and most obvious benefit.

An optimization problem can be solved using Greedy if the problem has the following property: At every step, we can make a choice that looks best at the moment, and we get the optimal solution of the complete problem.

If a Greedy Algorithm can solve a problem, then it generally becomes the best method to solve that problem as the Greedy algorithms are in general more efficient than other techniques like Dynamic Programming. But Greedy algorithms cannot always be applied. For example, Fractional Knapsack problem (See this) can be solved using Greedy, but 0-1 Knapsack cannot be solved using Greedy.

Some examples of Greedy Algorithms are :
     
    1. Kruskal's Minimum Spanning Tree.
    2. Prim' Minimum Spanning Tree.
    3. Djikstra's Algorithm.
    4. Huffman Coding.

